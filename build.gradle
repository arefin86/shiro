/**
 * This build script is based on https://github.com/ae6rt/gradle-antlr4-template
 * 
 * */

description = "shiro - a data flow language for alternatives"
apply plugin: 'java'
apply plugin: 'application'
apply from: file('gradle/idea.gradle')
apply from: 'gradle/javafx.plugin'

//mainClassName = 'shiro.drawing.ProjectAmoeba'
gradle.projectsEvaluated {
    tasks.withType(Compile) {
        options.compilerArgs << "-Xlint:unchecked"
    }
}

ext.versions = [
    junit: "4.10"
]

ext.antlr = [
    grammarpackage: "shiro.interpreter",
    antlrSource: 'src/main/java',
    destinationDir: "src/generated-sources/java"
]

repositories {
    mavenCentral()
    maven{
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

configurations {
    antlr4 {
        description = "ANTLR4"
    }
}

dependencies {
    compile group: "org.antlr", name: "antlr4-runtime", version: "4.2.1"
    compile 'net.sourceforge.collections:collections-generic:4.01'
    compile 'org.antlr:ST4:4.0.8'
    antlr4 group: "org.antlr", name: "antlr4", version: "4.2.1"
    testCompile group: "junit", name: "junit", version: versions.junit
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.10'
}

tasks.withType(Compile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties = System.getProperties()
    testLogging.showStandardStreams = true
}

task antlrOutputDir << {
    mkdir(antlr.destinationDir)
}

task generateGrammarSource(dependsOn: antlrOutputDir, type: JavaExec) {
    description = 'Generates Java sources from ANTLR4 grammars.'

    inputs.dir file(antlr.antlrSource)
    outputs.dir file(antlr.destinationDir)
    
    def grammars = fileTree(antlr.antlrSource).include('**/*.g4')

    main = 'org.antlr.v4.Tool'
    classpath = configurations.antlr4
    def pkg = antlr.grammarpackage.replaceAll("\\.", "/")
    args = ["-o", "${antlr.destinationDir}/${pkg}"/*, "-atn"*/, "-listener", "-package", antlr.grammarpackage, grammars.files].flatten()
}

compileJava {
    dependsOn generateGrammarSource
    source antlr.destinationDir
}

clean {
    delete antlr.destinationDir
}

jar{
    manifest {
        attributes 'Implementation-Title': 'shiro', 
                   'Implementation-Version': "0.1.0",
                   'Main-Class': "shiro.interpreter.Shiro"
    }
}

run {
    //    main = 'shiro.drawing.ProjectAmoeba'
    if(project.hasProperty('args')){
        args project.args.split('\\s+')
    }
}

javafx{
    appID 'Shiro'
    appName 'Shiro'
    mainClass mainClassName
}